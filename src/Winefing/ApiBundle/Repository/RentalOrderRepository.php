<?php

namespace Winefing\ApiBundle\Repository;

/**
 * RentalOrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RentalOrderRepository extends \Doctrine\ORM\EntityRepository
{
    function findWithUser($userId)
    {
        $query = $this->createQueryBuilder('rentalOrder')
            ->join("rentalOrder.invoiceInformation", "invoiceInformation")
            ->join("invoiceInformation.user", "user")
            ->where('user.id = :userId')
            ->orderBy('rentalOrder.id', 'DESC')
            ->setParameter('userId', $userId)
            ->getQuery();
        $results = $query->getResult();
        if(empty($results)) {
            $query = $this->createQueryBuilder('rentalOrder')
            ->join("rentalOrder.rental", "rental")
            ->join("rental.property", "property")
            ->join("property.domain", "domain")
            ->join("domain.user", "user")
            ->where('user.id = :userId')
            ->setParameter('userId', $userId)
            ->getQuery();
        $results =  $query->getResult();
        }
        return $results;
    }
//    public function findWithHost($userId)
//    {
//        $query = $this->createQueryBuilder('rentalOrder')
//            ->join("rentalOrder.rental", "rental")
//            ->join("rental.property", "property")
//            ->join("property.domain", "domain")
//            ->join("domain.user", "user")
//            ->where('user.id = :userId')
//            ->setParameter('userId', $userId)
//            ->getQuery();
//        return $query->getResult();
//    }
    public function findWithDomain($domainId)
    {
        $query = $this->createQueryBuilder('rentalOrder')
            ->join("rentalOrder.rental", "rental")
            ->join("rental.property", "property")
            ->join("property.domain", "domain")
            ->where('domain.id = :domainId')
            ->setParameter('domainId', $domainId)
            ->getQuery();
        return $query->getResult();
    }
}
