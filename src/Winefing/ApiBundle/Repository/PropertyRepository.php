<?php

namespace Winefing\ApiBundle\Repository;

/**
 * PropertyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PropertyRepository extends \Doctrine\ORM\EntityRepository
{
    function findByUser($userId) {
        $query = $this->createQueryBuilder('property')
            ->join("property.domain", "domain")
            ->join("domain.user", "user")
            ->where('user.id = :userId')
            ->setParameter('userId', $userId)
            ->getQuery();
        $properties = $query->getResult();
        return $properties;
    }
    function findOneByPropertyCategory($propertyCategoryId) {
        $query = $this->createQueryBuilder('property')
            ->join("property.propertyCategory", "propertyCategory")
            ->where('propertyCategory.id = :id')
            ->setParameter('id', $propertyCategoryId)
            ->setMaxResults(1)
            ->getQuery();
        $properties = $query->getResult();
        return $properties;
    }
    function findOneWithMediaId($mediaId)
    {
        $query = $this->createQueryBuilder('domain')
            ->innerJoin("domain.medias", "medias")
            ->where('medias.id = :mediaId')
            ->setParameter('mediaId', $mediaId)
            ->setMaxResults(1)
            ->getQuery();
        return $query->getOneOrNullResult();
    }
    function findWithDomain($domainId) {
        $query = $this->createQueryBuilder('property')
            ->join("property.domain", "domain")
            ->where('domain.id = :domainId')
            ->setParameter('domainId', $domainId)
            ->getQuery();
        $properties = $query->getResult();
        return $properties;
    }
}
