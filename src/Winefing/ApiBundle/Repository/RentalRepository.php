<?php

namespace Winefing\ApiBundle\Repository;

/**
 * RentalRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RentalRepository extends \Doctrine\ORM\EntityRepository
{
    function findByUser($userId)
    {
        if (empty($ids)) {
            $query = $this->createQueryBuilder('rental')
                ->join("rental.property", "property")
                ->join("property.domain", "domain")
                ->join("domain.user", "user")
                ->where('user.id = :userId')
                ->setParameter('userId', $userId)
                ->getQuery();
            return $query->getResult();
        }
    }
    function findOneWithMediaId($mediaId)
    {
        $query = $this->createQueryBuilder('domain')
            ->innerJoin("domain.medias", "medias")
            ->where('medias.id = :mediaId')
            ->setParameter('mediaId', $mediaId)
            ->setMaxResults(1)
            ->getQuery();
        return $query->getOneOrNullResult();
    }
    function findOneWithPrice($order) {
        $query = $this->createQueryBuilder('rental')
            ->orderBy('rental.price', $order)
            ->setMaxResults(1)
            ->getQuery();
        return $query->getOneOrNullResult();
    }
    function findWithDomain($domainId) {
        $query = $this->createQueryBuilder('rental')
            ->join("rental.property", "property")
            ->join("property.domain", "domain")
            ->where('domain.id = :domainId')
            ->setParameter('domainId', $domainId)
            ->getQuery();
        return $query->getResult();
    }
    function findWithProperty($propertyId) {
        $query = $this->createQueryBuilder('rental')
            ->join("rental.property", "property")
            ->where('property.id = :propertyId')
            ->setParameter('propertyId', $propertyId)
            ->getQuery();
        return $query->getResult();
    }
}
